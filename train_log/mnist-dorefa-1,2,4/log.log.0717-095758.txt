[32m[0717 09:44:50 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-234ea4b0-0d2e-4527-92f7-e4e8b495e88d.json
[32m[0717 09:44:50 @fs.py:101][0m [5m[31mWRN[0m Env var $TENSORPACK_DATASET not set, using /root/tensorpack_data for datasets.
[32m[0717 09:44:50 @fs.py:104][0m Created the directory /root/tensorpack_data.
[32m[0717 09:44:50 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-images-idx3-ubyte.gz...
[32m[0717 09:47:26 @fs.py:73][0m Succesfully downloaded train-images-idx3-ubyte.gz. 9912422 bytes.
[32m[0717 09:47:26 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-labels-idx1-ubyte.gz...
[32m[0717 09:47:26 @fs.py:73][0m Succesfully downloaded train-labels-idx1-ubyte.gz. 28881 bytes.
[32m[0717 09:47:26 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-images-idx3-ubyte.gz...
[32m[0717 09:47:43 @fs.py:73][0m Succesfully downloaded t10k-images-idx3-ubyte.gz. 1648877 bytes.
[32m[0717 09:47:43 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-labels-idx1-ubyte.gz...
[32m[0717 09:47:43 @fs.py:73][0m Succesfully downloaded t10k-labels-idx1-ubyte.gz. 4542 bytes.
[32m[0717 09:47:43 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0717 09:47:43 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0717 09:47:43 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv0/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv0': [?, 40, 40, 1] --> [?, 36, 36, 48]
[32m[0717 09:47:43 @registry.py:90][0m 'pool0': [?, 36, 36, 48] --> [?, 18, 18, 48]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv1/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv1': [?, 18, 18, 48] --> [?, 18, 18, 64]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv2/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv2': [?, 18, 18, 64] --> [?, 18, 18, 64]
[32m[0717 09:47:43 @registry.py:90][0m 'pool1': [?, 18, 18, 64] --> [?, 9, 9, 64]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv3/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv3': [?, 9, 9, 64] --> [?, 7, 7, 128]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv4/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv4': [?, 7, 7, 128] --> [?, 7, 7, 128]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv5/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv5': [?, 7, 7, 128] --> [?, 5, 5, 128]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv6/W
[32m[0717 09:47:43 @registry.py:90][0m 'conv6': [?, 5, 5, 128] --> [?, 1, 1, 512]
[32m[0717 09:47:43 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight fc1/W
[32m[0717 09:47:43 @registry.py:90][0m 'fc1': [?, 1, 1, 512] --> [?, 10]
[32m[0717 09:47:43 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0717 09:47:43 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0717 09:47:44 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0717 09:47:44 @base.py:207][0m Setup callbacks graph ...
[32m[0717 09:47:44 @argtools.py:138][0m [5m[31mWRN[0m Starting a process with 'fork' method is efficient but not safe and may cause deadlock or crash.Use 'forkserver' or 'spawn' method instead if you run into such issues.See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods on how to set them.
[32m[0717 09:47:44 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0717 09:47:44 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0717 09:47:44 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv0/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv1/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv2/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv3/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv4/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv5/W
[32m[0717 09:47:45 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight conv6/W
[32m[0717 09:47:46 @<ipython-input-3-7ff13444fb02>:113][0m Binarizing weight fc1/W
[32m[0717 09:47:46 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0717 09:47:46 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0717 09:47:46 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0717 09:47:46 @base.py:228][0m Creating the session ...
[32m[0717 09:47:52 @base.py:234][0m Initializing the session ...
[32m[0717 09:47:52 @base.py:241][0m Graph Finalized.
[32m[0717 09:47:52 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0717 09:47:52 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0717 09:47:52 @base.py:273][0m Start Epoch 1 ...
[32m[0717 09:48:38 @base.py:283][0m Epoch 1 (global_step 468) finished, time:45.9 seconds.
[32m[0717 09:48:38 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-468.
[32m[0717 09:48:39 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:48:39 @monitor.py:476][0m accuracy: 0.11752
[32m[0717 09:48:39 @monitor.py:476][0m cost: 2.3008
[32m[0717 09:48:39 @monitor.py:476][0m cross_entropy_loss: 2.3008
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv0/W-rms: 0.27809
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:48:39 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:48:40 @monitor.py:476][0m param-summary/fc1/W-rms: 0.06282
[32m[0717 09:48:40 @monitor.py:476][0m regularize_cost: 1.0097e-06
[32m[0717 09:48:40 @monitor.py:476][0m train_error: 0.88248
[32m[0717 09:48:40 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0717 09:48:40 @monitor.py:476][0m val_cross_entropy_loss: 2.3015
[32m[0717 09:48:40 @base.py:273][0m Start Epoch 2 ...
[32m[0717 09:48:51 @base.py:283][0m Epoch 2 (global_step 936) finished, time:11.2 seconds.
[32m[0717 09:48:51 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-936.
[32m[0717 09:48:52 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:48:52 @monitor.py:476][0m accuracy: 0.11447
[32m[0717 09:48:52 @monitor.py:476][0m cost: 2.3023
[32m[0717 09:48:52 @monitor.py:476][0m cross_entropy_loss: 2.3023
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv0/W-rms: 0.27972
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:48:52 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062613
[32m[0717 09:48:52 @monitor.py:476][0m regularize_cost: 1.0073e-06
[32m[0717 09:48:52 @monitor.py:476][0m train_error: 0.88553
[32m[0717 09:48:52 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 09:48:52 @monitor.py:476][0m val_cross_entropy_loss: 2.3012
[32m[0717 09:48:52 @base.py:273][0m Start Epoch 3 ...
[32m[0717 09:49:03 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:11.6 seconds.
[32m[0717 09:49:03 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-1404.
[32m[0717 09:49:04 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:49:04 @monitor.py:476][0m accuracy: 0.11081
[32m[0717 09:49:04 @monitor.py:476][0m cost: 2.3011
[32m[0717 09:49:04 @monitor.py:476][0m cross_entropy_loss: 2.3011
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28231
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:49:04 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062543
[32m[0717 09:49:04 @monitor.py:476][0m regularize_cost: 1.0021e-06
[32m[0717 09:49:04 @monitor.py:476][0m train_error: 0.88919
[32m[0717 09:49:04 @monitor.py:476][0m val_accuracy: 0.11432
[32m[0717 09:49:04 @monitor.py:476][0m val_cross_entropy_loss: 2.3011
[32m[0717 09:49:04 @base.py:273][0m Start Epoch 4 ...
[32m[0717 09:49:16 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:11.9 seconds.
[32m[0717 09:49:16 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-1872.
[32m[0717 09:49:17 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:49:17 @monitor.py:476][0m accuracy: 0.11384
[32m[0717 09:49:17 @monitor.py:476][0m cost: 2.301
[32m[0717 09:49:17 @monitor.py:476][0m cross_entropy_loss: 2.301
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28383
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:49:17 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062553
[32m[0717 09:49:17 @monitor.py:476][0m regularize_cost: 1.0035e-06
[32m[0717 09:49:17 @monitor.py:476][0m train_error: 0.88616
[32m[0717 09:49:17 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 09:49:17 @monitor.py:476][0m val_cross_entropy_loss: 2.3016
[32m[0717 09:49:17 @base.py:273][0m Start Epoch 5 ...
[32m[0717 09:49:29 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:11.8 seconds.
[32m[0717 09:49:29 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-2340.
[32m[0717 09:49:30 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:49:30 @monitor.py:476][0m accuracy: 0.11177
[32m[0717 09:49:30 @monitor.py:476][0m cost: 2.3012
[32m[0717 09:49:30 @monitor.py:476][0m cross_entropy_loss: 2.3012
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28453
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:49:30 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062199
[32m[0717 09:49:30 @monitor.py:476][0m regularize_cost: 9.9062e-07
[32m[0717 09:49:30 @monitor.py:476][0m train_error: 0.88823
[32m[0717 09:49:30 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 09:49:30 @monitor.py:476][0m val_cross_entropy_loss: 2.301
[32m[0717 09:49:30 @base.py:273][0m Start Epoch 6 ...
[32m[0717 09:49:42 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:11.7 seconds.
[32m[0717 09:49:42 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-2808.
[32m[0717 09:49:43 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:49:43 @monitor.py:476][0m accuracy: 0.11692
[32m[0717 09:49:43 @monitor.py:476][0m cost: 2.301
[32m[0717 09:49:43 @monitor.py:476][0m cross_entropy_loss: 2.301
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28564
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:49:43 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062085
[32m[0717 09:49:43 @monitor.py:476][0m regularize_cost: 9.8682e-07
[32m[0717 09:49:43 @monitor.py:476][0m train_error: 0.88308
[32m[0717 09:49:43 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 09:49:43 @monitor.py:476][0m val_cross_entropy_loss: 2.3012
[32m[0717 09:49:43 @base.py:273][0m Start Epoch 7 ...
[32m[0717 09:49:55 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:11.9 seconds.
[32m[0717 09:49:55 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-3276.
[32m[0717 09:49:56 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:49:56 @monitor.py:476][0m accuracy: 0.10382
[32m[0717 09:49:56 @monitor.py:476][0m cost: 2.3024
[32m[0717 09:49:56 @monitor.py:476][0m cross_entropy_loss: 2.3024
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28668
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:49:56 @monitor.py:476][0m param-summary/fc1/W-rms: 0.061771
[32m[0717 09:49:56 @monitor.py:476][0m regularize_cost: 9.7769e-07
[32m[0717 09:49:56 @monitor.py:476][0m train_error: 0.89618
[32m[0717 09:49:56 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 09:49:56 @monitor.py:476][0m val_cross_entropy_loss: 2.3011
[32m[0717 09:49:56 @base.py:273][0m Start Epoch 8 ...
[32m[0717 09:50:08 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:12.2 seconds.
[32m[0717 09:50:08 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-3744.
[32m[0717 09:50:09 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:50:09 @monitor.py:476][0m accuracy: 0.11977
[32m[0717 09:50:09 @monitor.py:476][0m cost: 2.3004
[32m[0717 09:50:09 @monitor.py:476][0m cross_entropy_loss: 2.3004
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28715
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:50:09 @monitor.py:476][0m param-summary/fc1/W-rms: 0.061715
[32m[0717 09:50:09 @monitor.py:476][0m regularize_cost: 9.7494e-07
[32m[0717 09:50:09 @monitor.py:476][0m train_error: 0.88023
[32m[0717 09:50:09 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 09:50:09 @monitor.py:476][0m val_cross_entropy_loss: 2.3012
[32m[0717 09:50:09 @base.py:273][0m Start Epoch 9 ...
[32m[0717 09:50:22 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:12.5 seconds.
[32m[0717 09:50:22 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-4212.
[32m[0717 09:50:23 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:50:23 @monitor.py:476][0m accuracy: 0.11545
[32m[0717 09:50:23 @monitor.py:476][0m cost: 2.3027
[32m[0717 09:50:23 @monitor.py:476][0m cross_entropy_loss: 2.3027
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28773
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041573
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:50:23 @monitor.py:476][0m param-summary/fc1/W-rms: 0.061467
[32m[0717 09:50:23 @monitor.py:476][0m regularize_cost: 9.6827e-07
[32m[0717 09:50:23 @monitor.py:476][0m train_error: 0.88455
[32m[0717 09:50:23 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 09:50:23 @monitor.py:476][0m val_cross_entropy_loss: 2.3012
[32m[0717 09:50:23 @base.py:273][0m Start Epoch 10 ...
[32m[0717 09:50:35 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:11.9 seconds.
[32m[0717 09:50:35 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-4680.
[32m[0717 09:50:35 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:50:35 @monitor.py:476][0m accuracy: 0.10635
[32m[0717 09:50:35 @monitor.py:476][0m cost: 2.3015
[32m[0717 09:50:35 @monitor.py:476][0m cross_entropy_loss: 2.3015
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28904
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv1/W-rms: 0.067344
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059422
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058753
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041629
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04185
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024992
[32m[0717 09:50:35 @monitor.py:476][0m param-summary/fc1/W-rms: 0.061344
[32m[0717 09:50:35 @monitor.py:476][0m regularize_cost: 9.6361e-07
[32m[0717 09:50:35 @monitor.py:476][0m train_error: 0.89365
[32m[0717 09:50:35 @monitor.py:476][0m val_accuracy: 0.1157
[32m[0717 09:50:36 @monitor.py:476][0m val_cross_entropy_loss: 2.3008
[32m[0717 09:50:36 @base.py:287][0m Training has finished!
[32m[0717 09:50:36 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
