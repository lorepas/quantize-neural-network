[32m[0717 10:31:34 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-728d80ac-4555-4ad0-a400-d2e2f90775c2.json
[32m[0717 10:31:34 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0717 10:31:34 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0717 10:31:34 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv0/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv1/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv2/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv3/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv4/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv5/W
[32m[0717 10:31:34 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv6/W
[32m[0717 10:31:35 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight fc1/W
[32m[0717 10:31:35 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0717 10:31:35 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0717 10:31:35 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0717 10:31:35 @base.py:207][0m Setup callbacks graph ...
[32m[0717 10:31:35 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0717 10:31:36 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0717 10:31:36 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv0/W
[32m[0717 10:31:37 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv1/W
[32m[0717 10:31:37 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv2/W
[32m[0717 10:31:38 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv3/W
[32m[0717 10:31:38 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv4/W
[32m[0717 10:31:38 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv5/W
[32m[0717 10:31:38 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight conv6/W
[32m[0717 10:31:38 @<ipython-input-4-7ff13444fb02>:113][0m Binarizing weight fc1/W
[32m[0717 10:31:38 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0717 10:31:38 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0717 10:31:38 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0717 10:31:38 @base.py:228][0m Creating the session ...
[32m[0717 10:31:39 @base.py:234][0m Initializing the session ...
[32m[0717 10:31:39 @base.py:241][0m Graph Finalized.
[32m[0717 10:31:39 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0717 10:31:39 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0717 10:31:39 @monitor.py:361][0m [5m[31mWRN[0m History epoch=29 from JSON is not the predecessor of the current starting_epoch=1
[32m[0717 10:31:39 @monitor.py:362][0m [5m[31mWRN[0m If you want to resume old training, either use `AutoResumeTrainConfig` or correctly set the new starting_epoch yourself to avoid inconsistency. 
[32m[0717 10:31:39 @monitor.py:369][0m [5m[31mWRN[0m Now, we will train with starting_epoch=1 and backup old json to train_log/mnist-dorefa-1,2,4/stats.json.0717-103139
[32m[0717 10:31:39 @base.py:273][0m Start Epoch 1 ...
[32m[0717 10:31:52 @base.py:283][0m Epoch 1 (global_step 468) finished, time:13.1 seconds.
[32m[0717 10:31:52 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-468.
[32m[0717 10:31:53 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:31:53 @monitor.py:476][0m accuracy: 0.12174
[32m[0717 10:31:53 @monitor.py:476][0m cost: 2.3008
[32m[0717 10:31:53 @monitor.py:476][0m cross_entropy_loss: 2.3008
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29315
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:31:53 @monitor.py:476][0m param-summary/fc1/W-rms: 0.063531
[32m[0717 10:31:53 @monitor.py:476][0m regularize_cost: 1.0331e-06
[32m[0717 10:31:53 @monitor.py:476][0m train_error: 0.87826
[32m[0717 10:31:53 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0717 10:31:53 @monitor.py:476][0m val_cross_entropy_loss: 2.301
[32m[0717 10:31:53 @base.py:273][0m Start Epoch 2 ...
[32m[0717 10:32:05 @base.py:283][0m Epoch 2 (global_step 936) finished, time:12 seconds.
[32m[0717 10:32:05 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-936.
[32m[0717 10:32:06 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:32:06 @monitor.py:476][0m accuracy: 0.11469
[32m[0717 10:32:06 @monitor.py:476][0m cost: 2.3005
[32m[0717 10:32:06 @monitor.py:476][0m cross_entropy_loss: 2.3005
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29748
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:32:06 @monitor.py:476][0m param-summary/fc1/W-rms: 0.063568
[32m[0717 10:32:06 @monitor.py:476][0m regularize_cost: 1.0327e-06
[32m[0717 10:32:06 @monitor.py:476][0m train_error: 0.88531
[32m[0717 10:32:06 @monitor.py:476][0m val_accuracy: 0.11432
[32m[0717 10:32:06 @monitor.py:476][0m val_cross_entropy_loss: 2.301
[32m[0717 10:32:06 @base.py:273][0m Start Epoch 3 ...
[32m[0717 10:32:18 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:11.9 seconds.
[32m[0717 10:32:18 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-1404.
[32m[0717 10:32:19 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:32:19 @monitor.py:476][0m accuracy: 0.1182
[32m[0717 10:32:19 @monitor.py:476][0m cost: 2.3002
[32m[0717 10:32:19 @monitor.py:476][0m cross_entropy_loss: 2.3001
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv0/W-rms: 0.3018
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:32:19 @monitor.py:476][0m param-summary/fc1/W-rms: 0.063623
[32m[0717 10:32:19 @monitor.py:476][0m regularize_cost: 1.035e-06
[32m[0717 10:32:19 @monitor.py:476][0m train_error: 0.8818
[32m[0717 10:32:19 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 10:32:19 @monitor.py:476][0m val_cross_entropy_loss: 2.3011
[32m[0717 10:32:19 @base.py:273][0m Start Epoch 4 ...
[32m[0717 10:32:31 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:11.9 seconds.
[32m[0717 10:32:31 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-1872.
[32m[0717 10:32:32 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:32:32 @monitor.py:476][0m accuracy: 0.11786
[32m[0717 10:32:32 @monitor.py:476][0m cost: 2.3003
[32m[0717 10:32:32 @monitor.py:476][0m cross_entropy_loss: 2.3003
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv0/W-rms: 0.30408
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:32:32 @monitor.py:476][0m param-summary/fc1/W-rms: 0.063383
[32m[0717 10:32:32 @monitor.py:476][0m regularize_cost: 1.0273e-06
[32m[0717 10:32:32 @monitor.py:476][0m train_error: 0.88214
[32m[0717 10:32:32 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 10:32:32 @monitor.py:476][0m val_cross_entropy_loss: 2.3012
[32m[0717 10:32:32 @base.py:273][0m Start Epoch 5 ...
[32m[0717 10:32:44 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:12.2 seconds.
[32m[0717 10:32:44 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-2340.
[32m[0717 10:32:45 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:32:45 @monitor.py:476][0m accuracy: 0.109
[32m[0717 10:32:45 @monitor.py:476][0m cost: 2.3019
[32m[0717 10:32:45 @monitor.py:476][0m cross_entropy_loss: 2.3019
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv0/W-rms: 0.30553
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:32:45 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062916
[32m[0717 10:32:45 @monitor.py:476][0m regularize_cost: 1.0136e-06
[32m[0717 10:32:45 @monitor.py:476][0m train_error: 0.891
[32m[0717 10:32:45 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0717 10:32:45 @monitor.py:476][0m val_cross_entropy_loss: 2.301
[32m[0717 10:32:45 @base.py:273][0m Start Epoch 6 ...
[32m[0717 10:32:57 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:11.9 seconds.
[32m[0717 10:32:57 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-2808.
[32m[0717 10:32:58 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:32:58 @monitor.py:476][0m accuracy: 0.11961
[32m[0717 10:32:58 @monitor.py:476][0m cost: 2.3
[32m[0717 10:32:58 @monitor.py:476][0m cross_entropy_loss: 2.3
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv0/W-rms: 0.3084
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:32:58 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062802
[32m[0717 10:32:58 @monitor.py:476][0m regularize_cost: 1.0096e-06
[32m[0717 10:32:58 @monitor.py:476][0m train_error: 0.88039
[32m[0717 10:32:58 @monitor.py:476][0m val_accuracy: 0.11224
[32m[0717 10:32:58 @monitor.py:476][0m val_cross_entropy_loss: 2.3011
[32m[0717 10:32:58 @base.py:273][0m Start Epoch 7 ...
[32m[0717 10:33:10 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:12 seconds.
[32m[0717 10:33:10 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-3276.
[32m[0717 10:33:11 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:33:11 @monitor.py:476][0m accuracy: 0.10927
[32m[0717 10:33:11 @monitor.py:476][0m cost: 2.3019
[32m[0717 10:33:11 @monitor.py:476][0m cross_entropy_loss: 2.3019
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv0/W-rms: 0.31103
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:33:11 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062431
[32m[0717 10:33:11 @monitor.py:476][0m regularize_cost: 9.9824e-07
[32m[0717 10:33:11 @monitor.py:476][0m train_error: 0.89073
[32m[0717 10:33:11 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 10:33:11 @monitor.py:476][0m val_cross_entropy_loss: 2.3014
[32m[0717 10:33:11 @base.py:273][0m Start Epoch 8 ...
[32m[0717 10:33:24 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:12.2 seconds.
[32m[0717 10:33:24 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-3744.
[32m[0717 10:33:25 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:33:25 @monitor.py:476][0m accuracy: 0.11265
[32m[0717 10:33:25 @monitor.py:476][0m cost: 2.3017
[32m[0717 10:33:25 @monitor.py:476][0m cross_entropy_loss: 2.3017
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv0/W-rms: 0.31159
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:33:25 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062294
[32m[0717 10:33:25 @monitor.py:476][0m regularize_cost: 9.9374e-07
[32m[0717 10:33:25 @monitor.py:476][0m train_error: 0.88735
[32m[0717 10:33:25 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0717 10:33:25 @monitor.py:476][0m val_cross_entropy_loss: 2.3011
[32m[0717 10:33:25 @base.py:273][0m Start Epoch 9 ...
[32m[0717 10:33:37 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:12 seconds.
[32m[0717 10:33:37 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-4212.
[32m[0717 10:33:38 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:33:38 @monitor.py:476][0m accuracy: 0.11004
[32m[0717 10:33:38 @monitor.py:476][0m cost: 2.301
[32m[0717 10:33:38 @monitor.py:476][0m cross_entropy_loss: 2.301
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv0/W-rms: 0.3123
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:33:38 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062123
[32m[0717 10:33:38 @monitor.py:476][0m regularize_cost: 9.881e-07
[32m[0717 10:33:38 @monitor.py:476][0m train_error: 0.88996
[32m[0717 10:33:38 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0717 10:33:38 @monitor.py:476][0m val_cross_entropy_loss: 2.3013
[32m[0717 10:33:38 @base.py:273][0m Start Epoch 10 ...
[32m[0717 10:33:49 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:11.7 seconds.
[32m[0717 10:33:49 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,2,4/model-4680.
[32m[0717 10:33:50 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 10:33:50 @monitor.py:476][0m accuracy: 0.1124
[32m[0717 10:33:50 @monitor.py:476][0m cost: 2.3018
[32m[0717 10:33:50 @monitor.py:476][0m cross_entropy_loss: 2.3018
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv0/W-rms: 0.31204
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068168
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv2/W-rms: 0.05887
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058843
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041688
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04158
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/conv6/W-rms: 0.024997
[32m[0717 10:33:50 @monitor.py:476][0m param-summary/fc1/W-rms: 0.061772
[32m[0717 10:33:50 @monitor.py:476][0m regularize_cost: 9.7736e-07
[32m[0717 10:33:50 @monitor.py:476][0m train_error: 0.8876
[32m[0717 10:33:50 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0717 10:33:50 @monitor.py:476][0m val_cross_entropy_loss: 2.3009
[32m[0717 10:33:50 @base.py:287][0m Training has finished!
[32m[0717 10:33:50 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
