[32m[0721 21:22:02 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-b5b3c3e8-7cd5-4670-bbd6-bf8d3ba9e586.json
[32m[0721 21:22:02 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-images-idx3-ubyte.gz...
[32m[0721 21:27:01 @fs.py:73][0m Succesfully downloaded train-images-idx3-ubyte.gz. 9912422 bytes.
[32m[0721 21:27:01 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-labels-idx1-ubyte.gz...
[32m[0721 21:27:01 @fs.py:73][0m Succesfully downloaded train-labels-idx1-ubyte.gz. 28881 bytes.
[32m[0721 21:27:01 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-images-idx3-ubyte.gz...
[32m[0721 21:27:51 @fs.py:73][0m Succesfully downloaded t10k-images-idx3-ubyte.gz. 1648877 bytes.
[32m[0721 21:27:51 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-labels-idx1-ubyte.gz...
[32m[0721 21:27:51 @fs.py:73][0m Succesfully downloaded t10k-labels-idx1-ubyte.gz. 4542 bytes.
[32m[0721 21:27:51 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0721 21:27:51 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0721 21:27:51 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0721 21:27:51 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv0/W
[32m[0721 21:27:51 @registry.py:90][0m 'conv0': [?, 40, 40, 1] --> [?, 36, 36, 48]
[32m[0721 21:27:51 @registry.py:90][0m 'pool0': [?, 36, 36, 48] --> [?, 18, 18, 48]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv1/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv1': [?, 18, 18, 48] --> [?, 18, 18, 64]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv2/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv2': [?, 18, 18, 64] --> [?, 18, 18, 64]
[32m[0721 21:27:52 @registry.py:90][0m 'pool1': [?, 18, 18, 64] --> [?, 9, 9, 64]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv3/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv3': [?, 9, 9, 64] --> [?, 7, 7, 128]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv4/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv4': [?, 7, 7, 128] --> [?, 7, 7, 128]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv5/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv5': [?, 7, 7, 128] --> [?, 5, 5, 128]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv6/W
[32m[0721 21:27:52 @registry.py:90][0m 'conv6': [?, 5, 5, 128] --> [?, 1, 1, 512]
[32m[0721 21:27:52 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight fc1/W
[32m[0721 21:27:52 @registry.py:90][0m 'fc1': [?, 1, 1, 512] --> [?, 10]
[32m[0721 21:27:52 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0721 21:27:52 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0721 21:27:53 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0721 21:27:53 @base.py:207][0m Setup callbacks graph ...
[32m[0721 21:27:53 @argtools.py:138][0m [5m[31mWRN[0m Starting a process with 'fork' method is efficient but not safe and may cause deadlock or crash.Use 'forkserver' or 'spawn' method instead if you run into such issues.See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods on how to set them.
[32m[0721 21:27:53 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0721 21:27:54 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0721 21:27:54 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv0/W
[32m[0721 21:27:54 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv1/W
[32m[0721 21:27:54 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv2/W
[32m[0721 21:27:54 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv3/W
[32m[0721 21:27:55 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv4/W
[32m[0721 21:27:55 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv5/W
[32m[0721 21:27:55 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight conv6/W
[32m[0721 21:27:55 @<ipython-input-5-1b6bc8653604>:114][0m Binarizing weight fc1/W
[32m[0721 21:27:55 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0721 21:27:55 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0721 21:27:55 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0721 21:27:55 @base.py:228][0m Creating the session ...
[32m[0721 21:28:01 @base.py:234][0m Initializing the session ...
[32m[0721 21:28:01 @base.py:241][0m Graph Finalized.
[32m[0721 21:28:01 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0721 21:28:02 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0721 21:28:02 @monitor.py:361][0m [5m[31mWRN[0m History epoch=10 from JSON is not the predecessor of the current starting_epoch=1
[32m[0721 21:28:02 @monitor.py:362][0m [5m[31mWRN[0m If you want to resume old training, either use `AutoResumeTrainConfig` or correctly set the new starting_epoch yourself to avoid inconsistency. 
[32m[0721 21:28:02 @monitor.py:369][0m [5m[31mWRN[0m Now, we will train with starting_epoch=1 and backup old json to train_log/mnist-dorefa-6,4,4/stats.json.0721-212802
[32m[0721 21:28:02 @base.py:273][0m Start Epoch 1 ...
[32m[0721 21:28:49 @base.py:283][0m Epoch 1 (global_step 468) finished, time:46.9 seconds.
[32m[0721 21:28:49 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-468.
[32m[0721 21:28:50 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:28:50 @monitor.py:476][0m accuracy: 0.11974
[32m[0721 21:28:50 @monitor.py:476][0m cost: 2.3016
[32m[0721 21:28:50 @monitor.py:476][0m cross_entropy_loss: 2.3016
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29085
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068089
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058947
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058707
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv4/W-rms: 0.04169
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv5/W-rms: 0.041696
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/conv6/W-rms: 0.025102
[32m[0721 21:28:50 @monitor.py:476][0m param-summary/fc1/W-rms: 0.053156
[32m[0721 21:28:50 @monitor.py:476][0m regularize_cost: 7.2357e-07
[32m[0721 21:28:50 @monitor.py:476][0m train_error: 0.88026
[32m[0721 21:28:50 @monitor.py:476][0m val_accuracy: 0.11501
[32m[0721 21:28:50 @monitor.py:476][0m val_cross_entropy_loss: 2.301
[32m[0721 21:28:50 @base.py:273][0m Start Epoch 2 ...
[32m[0721 21:29:03 @base.py:283][0m Epoch 2 (global_step 936) finished, time:12.5 seconds.
[32m[0721 21:29:03 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-936.
[32m[0721 21:29:04 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:29:04 @monitor.py:476][0m accuracy: 0.27996
[32m[0721 21:29:04 @monitor.py:476][0m cost: 1.9733
[32m[0721 21:29:04 @monitor.py:476][0m cross_entropy_loss: 1.9733
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068166
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062636
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062414
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv4/W-rms: 0.047472
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv5/W-rms: 0.049182
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/conv6/W-rms: 0.037924
[32m[0721 21:29:04 @monitor.py:476][0m param-summary/fc1/W-rms: 0.048033
[32m[0721 21:29:04 @monitor.py:476][0m regularize_cost: 5.9136e-07
[32m[0721 21:29:04 @monitor.py:476][0m train_error: 0.72004
[32m[0721 21:29:04 @monitor.py:476][0m val_accuracy: 0.26236
[32m[0721 21:29:04 @monitor.py:476][0m val_cross_entropy_loss: 1.9439
[32m[0721 21:29:04 @base.py:273][0m Start Epoch 3 ...
[32m[0721 21:29:17 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:12.7 seconds.
[32m[0721 21:29:17 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-1404.
[32m[0721 21:29:18 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:29:18 @monitor.py:476][0m accuracy: 0.29178
[32m[0721 21:29:18 @monitor.py:476][0m cost: 1.937
[32m[0721 21:29:18 @monitor.py:476][0m cross_entropy_loss: 1.937
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068166
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062778
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062439
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv4/W-rms: 0.047932
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv5/W-rms: 0.05088
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/conv6/W-rms: 0.040623
[32m[0721 21:29:18 @monitor.py:476][0m param-summary/fc1/W-rms: 0.047457
[32m[0721 21:29:18 @monitor.py:476][0m regularize_cost: 5.7787e-07
[32m[0721 21:29:18 @monitor.py:476][0m train_error: 0.70822
[32m[0721 21:29:18 @monitor.py:476][0m val_accuracy: 0.31339
[32m[0721 21:29:18 @monitor.py:476][0m val_cross_entropy_loss: 1.8952
[32m[0721 21:29:18 @base.py:273][0m Start Epoch 4 ...
[32m[0721 21:29:30 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:12.6 seconds.
[32m[0721 21:29:30 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-1872.
[32m[0721 21:29:31 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:29:31 @monitor.py:476][0m accuracy: 0.31377
[32m[0721 21:29:31 @monitor.py:476][0m cost: 1.8846
[32m[0721 21:29:31 @monitor.py:476][0m cross_entropy_loss: 1.8846
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068166
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062822
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062497
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv4/W-rms: 0.048541
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv5/W-rms: 0.052879
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/conv6/W-rms: 0.04286
[32m[0721 21:29:31 @monitor.py:476][0m param-summary/fc1/W-rms: 0.047738
[32m[0721 21:29:31 @monitor.py:476][0m regularize_cost: 5.8256e-07
[32m[0721 21:29:31 @monitor.py:476][0m train_error: 0.68623
[32m[0721 21:29:31 @monitor.py:476][0m val_accuracy: 0.24456
[32m[0721 21:29:31 @monitor.py:476][0m val_cross_entropy_loss: 2.3119
[32m[0721 21:29:31 @base.py:273][0m Start Epoch 5 ...
[32m[0721 21:29:44 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:12.9 seconds.
[32m[0721 21:29:44 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-2340.
[32m[0721 21:29:45 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:29:45 @monitor.py:476][0m accuracy: 0.31445
[32m[0721 21:29:45 @monitor.py:476][0m cost: 1.888
[32m[0721 21:29:45 @monitor.py:476][0m cross_entropy_loss: 1.888
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068166
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062905
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062576
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv4/W-rms: 0.049458
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv5/W-rms: 0.054549
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/conv6/W-rms: 0.045112
[32m[0721 21:29:45 @monitor.py:476][0m param-summary/fc1/W-rms: 0.048047
[32m[0721 21:29:45 @monitor.py:476][0m regularize_cost: 5.9143e-07
[32m[0721 21:29:45 @monitor.py:476][0m train_error: 0.68555
[32m[0721 21:29:45 @monitor.py:476][0m val_accuracy: 0.25692
[32m[0721 21:29:45 @monitor.py:476][0m val_cross_entropy_loss: 2.0312
[32m[0721 21:29:45 @base.py:273][0m Start Epoch 6 ...
[32m[0721 21:29:58 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:12.7 seconds.
[32m[0721 21:29:58 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-2808.
[32m[0721 21:29:59 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:29:59 @monitor.py:476][0m accuracy: 0.31564
[32m[0721 21:29:59 @monitor.py:476][0m cost: 1.879
[32m[0721 21:29:59 @monitor.py:476][0m cross_entropy_loss: 1.879
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068165
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062996
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062681
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv4/W-rms: 0.050471
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv5/W-rms: 0.05625
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/conv6/W-rms: 0.047381
[32m[0721 21:29:59 @monitor.py:476][0m param-summary/fc1/W-rms: 0.048684
[32m[0721 21:29:59 @monitor.py:476][0m regularize_cost: 6.0528e-07
[32m[0721 21:29:59 @monitor.py:476][0m train_error: 0.68436
[32m[0721 21:29:59 @monitor.py:476][0m val_accuracy: 0.30123
[32m[0721 21:29:59 @monitor.py:476][0m val_cross_entropy_loss: 1.9297
[32m[0721 21:29:59 @base.py:273][0m Start Epoch 7 ...
[32m[0721 21:30:12 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:13.1 seconds.
[32m[0721 21:30:12 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-3276.
[32m[0721 21:30:13 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:30:13 @monitor.py:476][0m accuracy: 0.31684
[32m[0721 21:30:13 @monitor.py:476][0m cost: 1.8847
[32m[0721 21:30:13 @monitor.py:476][0m cross_entropy_loss: 1.8847
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068166
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv2/W-rms: 0.06307
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv3/W-rms: 0.062857
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv4/W-rms: 0.051501
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv5/W-rms: 0.057873
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/conv6/W-rms: 0.049635
[32m[0721 21:30:13 @monitor.py:476][0m param-summary/fc1/W-rms: 0.049308
[32m[0721 21:30:13 @monitor.py:476][0m regularize_cost: 6.2153e-07
[32m[0721 21:30:13 @monitor.py:476][0m train_error: 0.68316
[32m[0721 21:30:13 @monitor.py:476][0m val_accuracy: 0.30182
[32m[0721 21:30:13 @monitor.py:476][0m val_cross_entropy_loss: 1.9063
[32m[0721 21:30:13 @base.py:273][0m Start Epoch 8 ...
[32m[0721 21:30:26 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:13.1 seconds.
[32m[0721 21:30:27 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-3744.
[32m[0721 21:30:27 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:30:27 @monitor.py:476][0m accuracy: 0.32915
[32m[0721 21:30:27 @monitor.py:476][0m cost: 1.8568
[32m[0721 21:30:27 @monitor.py:476][0m cross_entropy_loss: 1.8568
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068164
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv2/W-rms: 0.063175
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv3/W-rms: 0.063141
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv4/W-rms: 0.052576
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv5/W-rms: 0.059697
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/conv6/W-rms: 0.05189
[32m[0721 21:30:27 @monitor.py:476][0m param-summary/fc1/W-rms: 0.050265
[32m[0721 21:30:27 @monitor.py:476][0m regularize_cost: 6.4639e-07
[32m[0721 21:30:27 @monitor.py:476][0m train_error: 0.67085
[32m[0721 21:30:27 @monitor.py:476][0m val_accuracy: 0.27512
[32m[0721 21:30:27 @monitor.py:476][0m val_cross_entropy_loss: 2.1151
[32m[0721 21:30:27 @base.py:273][0m Start Epoch 9 ...
[32m[0721 21:30:41 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:13.2 seconds.
[32m[0721 21:30:41 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-4212.
[32m[0721 21:30:42 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:30:42 @monitor.py:476][0m accuracy: 0.31282
[32m[0721 21:30:42 @monitor.py:476][0m cost: 1.8746
[32m[0721 21:30:42 @monitor.py:476][0m cross_entropy_loss: 1.8746
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068165
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv2/W-rms: 0.063199
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv3/W-rms: 0.063492
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv4/W-rms: 0.05369
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv5/W-rms: 0.061141
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/conv6/W-rms: 0.054173
[32m[0721 21:30:42 @monitor.py:476][0m param-summary/fc1/W-rms: 0.051045
[32m[0721 21:30:42 @monitor.py:476][0m regularize_cost: 6.671e-07
[32m[0721 21:30:42 @monitor.py:476][0m train_error: 0.68718
[32m[0721 21:30:42 @monitor.py:476][0m val_accuracy: 0.25781
[32m[0721 21:30:42 @monitor.py:476][0m val_cross_entropy_loss: 2.2099
[32m[0721 21:30:42 @base.py:273][0m Start Epoch 10 ...
[32m[0721 21:30:55 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:12.9 seconds.
[32m[0721 21:30:55 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-4680.
[32m[0721 21:30:56 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:30:56 @monitor.py:476][0m accuracy: 0.33135
[32m[0721 21:30:56 @monitor.py:476][0m cost: 1.8726
[32m[0721 21:30:56 @monitor.py:476][0m cross_entropy_loss: 1.8726
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29094
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068167
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv2/W-rms: 0.063198
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv3/W-rms: 0.063899
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv4/W-rms: 0.055083
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv5/W-rms: 0.063317
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/conv6/W-rms: 0.056339
[32m[0721 21:30:56 @monitor.py:476][0m param-summary/fc1/W-rms: 0.052509
[32m[0721 21:30:56 @monitor.py:476][0m regularize_cost: 7.0566e-07
[32m[0721 21:30:56 @monitor.py:476][0m train_error: 0.66865
[32m[0721 21:30:56 @monitor.py:476][0m val_accuracy: 0.26127
[32m[0721 21:30:56 @monitor.py:476][0m val_cross_entropy_loss: 2.138
[32m[0721 21:30:56 @base.py:287][0m Training has finished!
[32m[0721 21:30:56 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
