[32m[0721 21:34:53 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-b5b3c3e8-7cd5-4670-bbd6-bf8d3ba9e586.json
[32m[0721 21:34:53 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0721 21:34:53 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0721 21:34:53 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv0/W
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv1/W
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv2/W
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv3/W
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv4/W
[32m[0721 21:34:53 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv5/W
[32m[0721 21:34:54 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv6/W
[32m[0721 21:34:54 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight fc1/W
[32m[0721 21:34:54 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0721 21:34:54 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0721 21:34:54 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0721 21:34:54 @base.py:207][0m Setup callbacks graph ...
[32m[0721 21:34:55 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0721 21:34:55 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0721 21:34:55 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv0/W
[32m[0721 21:34:55 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv1/W
[32m[0721 21:34:55 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv2/W
[32m[0721 21:34:56 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv3/W
[32m[0721 21:34:56 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv4/W
[32m[0721 21:34:56 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv5/W
[32m[0721 21:34:56 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight conv6/W
[32m[0721 21:34:57 @<ipython-input-10-1b6bc8653604>:114][0m Binarizing weight fc1/W
[32m[0721 21:34:57 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0721 21:34:57 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0721 21:34:57 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0721 21:34:57 @base.py:228][0m Creating the session ...
[32m[0721 21:34:58 @base.py:234][0m Initializing the session ...
[32m[0721 21:34:58 @base.py:241][0m Graph Finalized.
[32m[0721 21:34:58 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0721 21:34:58 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0721 21:34:58 @monitor.py:361][0m [5m[31mWRN[0m History epoch=6 from JSON is not the predecessor of the current starting_epoch=1
[32m[0721 21:34:58 @monitor.py:362][0m [5m[31mWRN[0m If you want to resume old training, either use `AutoResumeTrainConfig` or correctly set the new starting_epoch yourself to avoid inconsistency. 
[32m[0721 21:34:58 @monitor.py:369][0m [5m[31mWRN[0m Now, we will train with starting_epoch=1 and backup old json to train_log/mnist-dorefa-6,4,4/stats.json.0721-213458
[32m[0721 21:34:58 @base.py:273][0m Start Epoch 1 ...
[32m[0721 21:35:12 @base.py:283][0m Epoch 1 (global_step 468) finished, time:13.8 seconds.
[32m[0721 21:35:12 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-468.
[32m[0721 21:35:13 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:35:13 @monitor.py:476][0m accuracy: 0.090833
[32m[0721 21:35:13 @monitor.py:476][0m cost: 2.451
[32m[0721 21:35:13 @monitor.py:476][0m cross_entropy_loss: 2.451
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041798
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv5/W-rms: 0.045588
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/conv6/W-rms: 0.03052
[32m[0721 21:35:13 @monitor.py:476][0m param-summary/fc1/W-rms: 0.032046
[32m[0721 21:35:13 @monitor.py:476][0m regularize_cost: 2.7436e-07
[32m[0721 21:35:13 @monitor.py:476][0m train_error: 0.90917
[32m[0721 21:35:13 @monitor.py:476][0m val_accuracy: 0.11501
[32m[0721 21:35:13 @monitor.py:476][0m val_cross_entropy_loss: 2.3708
[32m[0721 21:35:13 @base.py:273][0m Start Epoch 2 ...
[32m[0721 21:35:26 @base.py:283][0m Epoch 2 (global_step 936) finished, time:12.8 seconds.
[32m[0721 21:35:26 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-936.
[32m[0721 21:35:27 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:35:27 @monitor.py:476][0m accuracy: 0.10038
[32m[0721 21:35:27 @monitor.py:476][0m cost: 2.3511
[32m[0721 21:35:27 @monitor.py:476][0m cross_entropy_loss: 2.3511
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041799
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv5/W-rms: 0.046491
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/conv6/W-rms: 0.031856
[32m[0721 21:35:27 @monitor.py:476][0m param-summary/fc1/W-rms: 0.025205
[32m[0721 21:35:27 @monitor.py:476][0m regularize_cost: 1.6427e-07
[32m[0721 21:35:27 @monitor.py:476][0m train_error: 0.89962
[32m[0721 21:35:27 @monitor.py:476][0m val_accuracy: 0.096915
[32m[0721 21:35:27 @monitor.py:476][0m val_cross_entropy_loss: 2.3041
[32m[0721 21:35:27 @base.py:273][0m Start Epoch 3 ...
[32m[0721 21:35:40 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:12.8 seconds.
[32m[0721 21:35:40 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-1404.
[32m[0721 21:35:41 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:35:41 @monitor.py:476][0m accuracy: 0.099787
[32m[0721 21:35:41 @monitor.py:476][0m cost: 2.3346
[32m[0721 21:35:41 @monitor.py:476][0m cross_entropy_loss: 2.3346
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041801
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04704
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/conv6/W-rms: 0.032849
[32m[0721 21:35:41 @monitor.py:476][0m param-summary/fc1/W-rms: 0.023946
[32m[0721 21:35:41 @monitor.py:476][0m regularize_cost: 1.4713e-07
[32m[0721 21:35:41 @monitor.py:476][0m train_error: 0.90021
[32m[0721 21:35:41 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 21:35:41 @monitor.py:476][0m val_cross_entropy_loss: 2.3037
[32m[0721 21:35:41 @base.py:273][0m Start Epoch 4 ...
[32m[0721 21:35:54 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:12.7 seconds.
[32m[0721 21:35:54 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-1872.
[32m[0721 21:35:55 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:35:55 @monitor.py:476][0m accuracy: 0.10047
[32m[0721 21:35:55 @monitor.py:476][0m cost: 2.3296
[32m[0721 21:35:55 @monitor.py:476][0m cross_entropy_loss: 2.3296
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041801
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv5/W-rms: 0.047426
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/conv6/W-rms: 0.033999
[32m[0721 21:35:55 @monitor.py:476][0m param-summary/fc1/W-rms: 0.023983
[32m[0721 21:35:55 @monitor.py:476][0m regularize_cost: 1.4713e-07
[32m[0721 21:35:55 @monitor.py:476][0m train_error: 0.89953
[32m[0721 21:35:55 @monitor.py:476][0m val_accuracy: 0.099782
[32m[0721 21:35:55 @monitor.py:476][0m val_cross_entropy_loss: 2.3031
[32m[0721 21:35:55 @base.py:273][0m Start Epoch 5 ...
[32m[0721 21:36:07 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:12.8 seconds.
[32m[0721 21:36:08 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-2340.
[32m[0721 21:36:09 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:36:09 @monitor.py:476][0m accuracy: 0.10655
[32m[0721 21:36:09 @monitor.py:476][0m cost: 2.326
[32m[0721 21:36:09 @monitor.py:476][0m cross_entropy_loss: 2.326
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041804
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv5/W-rms: 0.048012
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/conv6/W-rms: 0.035312
[32m[0721 21:36:09 @monitor.py:476][0m param-summary/fc1/W-rms: 0.024158
[32m[0721 21:36:09 @monitor.py:476][0m regularize_cost: 1.4938e-07
[32m[0721 21:36:09 @monitor.py:476][0m train_error: 0.89345
[32m[0721 21:36:09 @monitor.py:476][0m val_accuracy: 0.11501
[32m[0721 21:36:09 @monitor.py:476][0m val_cross_entropy_loss: 2.3024
[32m[0721 21:36:09 @base.py:273][0m Start Epoch 6 ...
[32m[0721 21:36:21 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:12.6 seconds.
[32m[0721 21:36:21 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-2808.
[32m[0721 21:36:22 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:36:22 @monitor.py:476][0m accuracy: 0.10293
[32m[0721 21:36:22 @monitor.py:476][0m cost: 2.3247
[32m[0721 21:36:22 @monitor.py:476][0m cross_entropy_loss: 2.3247
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041807
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv5/W-rms: 0.048796
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/conv6/W-rms: 0.036485
[32m[0721 21:36:22 @monitor.py:476][0m param-summary/fc1/W-rms: 0.024488
[32m[0721 21:36:22 @monitor.py:476][0m regularize_cost: 1.5334e-07
[32m[0721 21:36:22 @monitor.py:476][0m train_error: 0.89707
[32m[0721 21:36:22 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 21:36:22 @monitor.py:476][0m val_cross_entropy_loss: 2.3019
[32m[0721 21:36:22 @base.py:273][0m Start Epoch 7 ...
[32m[0721 21:36:35 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:12.7 seconds.
[32m[0721 21:36:35 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-3276.
[32m[0721 21:36:36 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:36:36 @monitor.py:476][0m accuracy: 0.097057
[32m[0721 21:36:36 @monitor.py:476][0m cost: 2.3253
[32m[0721 21:36:36 @monitor.py:476][0m cross_entropy_loss: 2.3253
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041815
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv5/W-rms: 0.050164
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/conv6/W-rms: 0.038179
[32m[0721 21:36:36 @monitor.py:476][0m param-summary/fc1/W-rms: 0.024746
[32m[0721 21:36:36 @monitor.py:476][0m regularize_cost: 1.5667e-07
[32m[0721 21:36:36 @monitor.py:476][0m train_error: 0.90294
[32m[0721 21:36:36 @monitor.py:476][0m val_accuracy: 0.099881
[32m[0721 21:36:36 @monitor.py:476][0m val_cross_entropy_loss: 2.3027
[32m[0721 21:36:36 @base.py:273][0m Start Epoch 8 ...
[32m[0721 21:36:49 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:12.9 seconds.
[32m[0721 21:36:49 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-3744.
[32m[0721 21:36:50 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:36:50 @monitor.py:476][0m accuracy: 0.10254
[32m[0721 21:36:50 @monitor.py:476][0m cost: 2.3186
[32m[0721 21:36:50 @monitor.py:476][0m cross_entropy_loss: 2.3186
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041822
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv5/W-rms: 0.051481
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/conv6/W-rms: 0.040293
[32m[0721 21:36:50 @monitor.py:476][0m param-summary/fc1/W-rms: 0.025141
[32m[0721 21:36:50 @monitor.py:476][0m regularize_cost: 1.6184e-07
[32m[0721 21:36:50 @monitor.py:476][0m train_error: 0.89746
[32m[0721 21:36:50 @monitor.py:476][0m val_accuracy: 0.096915
[32m[0721 21:36:50 @monitor.py:476][0m val_cross_entropy_loss: 2.3027
[32m[0721 21:36:50 @base.py:273][0m Start Epoch 9 ...
[32m[0721 21:37:03 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:13.1 seconds.
[32m[0721 21:37:03 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-4212.
[32m[0721 21:37:04 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:37:04 @monitor.py:476][0m accuracy: 0.1089
[32m[0721 21:37:04 @monitor.py:476][0m cost: 2.3203
[32m[0721 21:37:04 @monitor.py:476][0m cross_entropy_loss: 2.3203
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv4/W-rms: 0.04183
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv5/W-rms: 0.052907
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/conv6/W-rms: 0.042358
[32m[0721 21:37:04 @monitor.py:476][0m param-summary/fc1/W-rms: 0.025457
[32m[0721 21:37:04 @monitor.py:476][0m regularize_cost: 1.6581e-07
[32m[0721 21:37:04 @monitor.py:476][0m train_error: 0.8911
[32m[0721 21:37:04 @monitor.py:476][0m val_accuracy: 0.097607
[32m[0721 21:37:04 @monitor.py:476][0m val_cross_entropy_loss: 2.3022
[32m[0721 21:37:04 @base.py:273][0m Start Epoch 10 ...
[32m[0721 21:37:17 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:12.5 seconds.
[32m[0721 21:37:17 @saver.py:82][0m Model saved to train_log/mnist-dorefa-6,4,4/model-4680.
[32m[0721 21:37:18 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 21:37:18 @monitor.py:476][0m accuracy: 0.10229
[32m[0721 21:37:18 @monitor.py:476][0m cost: 2.3112
[32m[0721 21:37:18 @monitor.py:476][0m cross_entropy_loss: 2.3112
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv0/W-rms: 0.29912
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv1/W-rms: 0.068355
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059003
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv3/W-rms: 0.05889
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv4/W-rms: 0.04183
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv5/W-rms: 0.054214
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/conv6/W-rms: 0.044284
[32m[0721 21:37:18 @monitor.py:476][0m param-summary/fc1/W-rms: 0.025887
[32m[0721 21:37:18 @monitor.py:476][0m regularize_cost: 1.7115e-07
[32m[0721 21:37:18 @monitor.py:476][0m train_error: 0.89771
[32m[0721 21:37:18 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0721 21:37:18 @monitor.py:476][0m val_cross_entropy_loss: 2.3017
[32m[0721 21:37:18 @base.py:287][0m Training has finished!
[32m[0721 21:37:18 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
