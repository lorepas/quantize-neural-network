[32m[0721 20:27:58 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-df2f652a-6a36-4a45-bf7e-6da5e9b81f72.json
[32m[0721 20:27:58 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-images-idx3-ubyte.gz...
[32m[0721 20:32:57 @fs.py:73][0m Succesfully downloaded train-images-idx3-ubyte.gz. 9912422 bytes.
[32m[0721 20:32:58 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-labels-idx1-ubyte.gz...
[32m[0721 20:32:58 @fs.py:73][0m Succesfully downloaded train-labels-idx1-ubyte.gz. 28881 bytes.
[32m[0721 20:32:58 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-images-idx3-ubyte.gz...
[32m[0721 20:33:48 @fs.py:73][0m Succesfully downloaded t10k-images-idx3-ubyte.gz. 1648877 bytes.
[32m[0721 20:33:48 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-labels-idx1-ubyte.gz...
[32m[0721 20:33:48 @fs.py:73][0m Succesfully downloaded t10k-labels-idx1-ubyte.gz. 4542 bytes.
[32m[0721 20:33:48 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0721 20:33:48 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0721 20:33:48 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv0/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv0': [?, 40, 40, 1] --> [?, 36, 36, 48]
[32m[0721 20:33:48 @registry.py:90][0m 'pool0': [?, 36, 36, 48] --> [?, 18, 18, 48]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv1/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv1': [?, 18, 18, 48] --> [?, 18, 18, 64]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv2/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv2': [?, 18, 18, 64] --> [?, 18, 18, 64]
[32m[0721 20:33:48 @registry.py:90][0m 'pool1': [?, 18, 18, 64] --> [?, 9, 9, 64]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv3/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv3': [?, 9, 9, 64] --> [?, 7, 7, 128]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv4/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv4': [?, 7, 7, 128] --> [?, 7, 7, 128]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv5/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv5': [?, 7, 7, 128] --> [?, 5, 5, 128]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv6/W
[32m[0721 20:33:48 @registry.py:90][0m 'conv6': [?, 5, 5, 128] --> [?, 1, 1, 512]
[32m[0721 20:33:48 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight fc1/W
[32m[0721 20:33:48 @registry.py:90][0m 'fc1': [?, 1, 1, 512] --> [?, 10]
[32m[0721 20:33:48 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0721 20:33:48 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0721 20:33:49 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0721 20:33:49 @base.py:207][0m Setup callbacks graph ...
[32m[0721 20:33:49 @argtools.py:138][0m [5m[31mWRN[0m Starting a process with 'fork' method is efficient but not safe and may cause deadlock or crash.Use 'forkserver' or 'spawn' method instead if you run into such issues.See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods on how to set them.
[32m[0721 20:33:49 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0721 20:33:50 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0721 20:33:50 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv0/W
[32m[0721 20:33:50 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv1/W
[32m[0721 20:33:50 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv2/W
[32m[0721 20:33:50 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv3/W
[32m[0721 20:33:51 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv4/W
[32m[0721 20:33:51 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv5/W
[32m[0721 20:33:51 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight conv6/W
[32m[0721 20:33:51 @<ipython-input-4-be49c17f8cc2>:114][0m Binarizing weight fc1/W
[32m[0721 20:33:51 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0721 20:33:51 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0721 20:33:51 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0721 20:33:51 @base.py:228][0m Creating the session ...
[32m[0721 20:33:58 @base.py:234][0m Initializing the session ...
[32m[0721 20:33:58 @base.py:241][0m Graph Finalized.
[32m[0721 20:33:58 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0721 20:33:58 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0721 20:33:58 @base.py:273][0m Start Epoch 1 ...
[32m[0721 20:34:44 @base.py:283][0m Epoch 1 (global_step 468) finished, time:45.7 seconds.
[32m[0721 20:34:44 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-468.
[32m[0721 20:34:45 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:34:45 @monitor.py:476][0m accuracy: 0.11345
[32m[0721 20:34:45 @monitor.py:476][0m cost: 2.3007
[32m[0721 20:34:45 @monitor.py:476][0m cross_entropy_loss: 2.3007
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv0/W-rms: 0.27889
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041671
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04173
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/conv6/W-rms: 0.025032
[32m[0721 20:34:45 @monitor.py:476][0m param-summary/fc1/W-rms: 0.064759
[32m[0721 20:34:45 @monitor.py:476][0m regularize_cost: 1.0718e-06
[32m[0721 20:34:45 @monitor.py:476][0m train_error: 0.88655
[32m[0721 20:34:45 @monitor.py:476][0m val_accuracy: 0.10344
[32m[0721 20:34:45 @monitor.py:476][0m val_cross_entropy_loss: 3.2816
[32m[0721 20:34:45 @base.py:273][0m Start Epoch 2 ...
[32m[0721 20:34:56 @base.py:283][0m Epoch 2 (global_step 936) finished, time:11.5 seconds.
[32m[0721 20:34:56 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-936.
[32m[0721 20:34:57 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:34:57 @monitor.py:476][0m accuracy: 0.10165
[32m[0721 20:34:57 @monitor.py:476][0m cost: 2.351
[32m[0721 20:34:57 @monitor.py:476][0m cross_entropy_loss: 2.351
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28132
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041759
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv5/W-rms: 0.050283
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/conv6/W-rms: 0.036911
[32m[0721 20:34:57 @monitor.py:476][0m param-summary/fc1/W-rms: 0.040971
[32m[0721 20:34:57 @monitor.py:476][0m regularize_cost: 4.4258e-07
[32m[0721 20:34:57 @monitor.py:476][0m train_error: 0.89835
[32m[0721 20:34:57 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:34:57 @monitor.py:476][0m val_cross_entropy_loss: 2.3035
[32m[0721 20:34:57 @base.py:273][0m Start Epoch 3 ...
[32m[0721 20:35:09 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:11.9 seconds.
[32m[0721 20:35:09 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-1404.
[32m[0721 20:35:10 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:35:10 @monitor.py:476][0m accuracy: 0.096461
[32m[0721 20:35:10 @monitor.py:476][0m cost: 2.3235
[32m[0721 20:35:10 @monitor.py:476][0m cross_entropy_loss: 2.3235
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28132
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041783
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv5/W-rms: 0.051637
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/conv6/W-rms: 0.039544
[32m[0721 20:35:10 @monitor.py:476][0m param-summary/fc1/W-rms: 0.035481
[32m[0721 20:35:10 @monitor.py:476][0m regularize_cost: 3.2366e-07
[32m[0721 20:35:10 @monitor.py:476][0m train_error: 0.90354
[32m[0721 20:35:10 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0721 20:35:10 @monitor.py:476][0m val_cross_entropy_loss: 2.3014
[32m[0721 20:35:10 @base.py:273][0m Start Epoch 4 ...
[32m[0721 20:35:22 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:11.8 seconds.
[32m[0721 20:35:22 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-1872.
[32m[0721 20:35:23 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:35:23 @monitor.py:476][0m accuracy: 0.098001
[32m[0721 20:35:23 @monitor.py:476][0m cost: 2.3227
[32m[0721 20:35:23 @monitor.py:476][0m cross_entropy_loss: 2.3227
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28132
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041797
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv5/W-rms: 0.052644
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/conv6/W-rms: 0.041417
[32m[0721 20:35:23 @monitor.py:476][0m param-summary/fc1/W-rms: 0.033446
[32m[0721 20:35:23 @monitor.py:476][0m regularize_cost: 2.8772e-07
[32m[0721 20:35:23 @monitor.py:476][0m train_error: 0.902
[32m[0721 20:35:23 @monitor.py:476][0m val_accuracy: 0.11294
[32m[0721 20:35:23 @monitor.py:476][0m val_cross_entropy_loss: 2.3021
[32m[0721 20:35:23 @base.py:273][0m Start Epoch 5 ...
[32m[0721 20:35:35 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:11.9 seconds.
[32m[0721 20:35:35 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-2340.
[32m[0721 20:35:36 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:35:36 @monitor.py:476][0m accuracy: 0.10137
[32m[0721 20:35:36 @monitor.py:476][0m cost: 2.3175
[32m[0721 20:35:36 @monitor.py:476][0m cross_entropy_loss: 2.3175
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041806
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv5/W-rms: 0.053379
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/conv6/W-rms: 0.04313
[32m[0721 20:35:36 @monitor.py:476][0m param-summary/fc1/W-rms: 0.032529
[32m[0721 20:35:36 @monitor.py:476][0m regularize_cost: 2.7119e-07
[32m[0721 20:35:36 @monitor.py:476][0m train_error: 0.89863
[32m[0721 20:35:36 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:35:36 @monitor.py:476][0m val_cross_entropy_loss: 2.3018
[32m[0721 20:35:36 @base.py:273][0m Start Epoch 6 ...
[32m[0721 20:35:48 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:11.7 seconds.
[32m[0721 20:35:48 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-2808.
[32m[0721 20:35:49 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:35:49 @monitor.py:476][0m accuracy: 0.099836
[32m[0721 20:35:49 @monitor.py:476][0m cost: 2.3155
[32m[0721 20:35:49 @monitor.py:476][0m cross_entropy_loss: 2.3155
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041819
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv5/W-rms: 0.054352
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/conv6/W-rms: 0.044719
[32m[0721 20:35:49 @monitor.py:476][0m param-summary/fc1/W-rms: 0.032024
[32m[0721 20:35:49 @monitor.py:476][0m regularize_cost: 2.6212e-07
[32m[0721 20:35:49 @monitor.py:476][0m train_error: 0.90016
[32m[0721 20:35:49 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:35:49 @monitor.py:476][0m val_cross_entropy_loss: 2.3017
[32m[0721 20:35:49 @base.py:273][0m Start Epoch 7 ...
[32m[0721 20:36:01 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:12.1 seconds.
[32m[0721 20:36:01 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-3276.
[32m[0721 20:36:02 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:36:02 @monitor.py:476][0m accuracy: 0.10347
[32m[0721 20:36:02 @monitor.py:476][0m cost: 2.315
[32m[0721 20:36:02 @monitor.py:476][0m cross_entropy_loss: 2.315
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041846
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv5/W-rms: 0.055531
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/conv6/W-rms: 0.046469
[32m[0721 20:36:02 @monitor.py:476][0m param-summary/fc1/W-rms: 0.031837
[32m[0721 20:36:02 @monitor.py:476][0m regularize_cost: 2.6003e-07
[32m[0721 20:36:02 @monitor.py:476][0m train_error: 0.89653
[32m[0721 20:36:02 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:36:02 @monitor.py:476][0m val_cross_entropy_loss: 2.3019
[32m[0721 20:36:02 @base.py:273][0m Start Epoch 8 ...
[32m[0721 20:36:14 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:12 seconds.
[32m[0721 20:36:14 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-3744.
[32m[0721 20:36:15 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:36:15 @monitor.py:476][0m accuracy: 0.10337
[32m[0721 20:36:15 @monitor.py:476][0m cost: 2.3111
[32m[0721 20:36:15 @monitor.py:476][0m cross_entropy_loss: 2.3111
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041875
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv5/W-rms: 0.056764
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/conv6/W-rms: 0.048136
[32m[0721 20:36:15 @monitor.py:476][0m param-summary/fc1/W-rms: 0.03189
[32m[0721 20:36:15 @monitor.py:476][0m regularize_cost: 2.6001e-07
[32m[0721 20:36:15 @monitor.py:476][0m train_error: 0.89663
[32m[0721 20:36:15 @monitor.py:476][0m val_accuracy: 0.11501
[32m[0721 20:36:15 @monitor.py:476][0m val_cross_entropy_loss: 2.3013
[32m[0721 20:36:15 @base.py:273][0m Start Epoch 9 ...
[32m[0721 20:36:27 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:12 seconds.
[32m[0721 20:36:27 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-4212.
[32m[0721 20:36:28 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:36:28 @monitor.py:476][0m accuracy: 0.10776
[32m[0721 20:36:28 @monitor.py:476][0m cost: 2.311
[32m[0721 20:36:28 @monitor.py:476][0m cross_entropy_loss: 2.311
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv4/W-rms: 0.041877
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv5/W-rms: 0.057685
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/conv6/W-rms: 0.049714
[32m[0721 20:36:28 @monitor.py:476][0m param-summary/fc1/W-rms: 0.032177
[32m[0721 20:36:28 @monitor.py:476][0m regularize_cost: 2.6482e-07
[32m[0721 20:36:28 @monitor.py:476][0m train_error: 0.89224
[32m[0721 20:36:28 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:36:28 @monitor.py:476][0m val_cross_entropy_loss: 2.3013
[32m[0721 20:36:28 @base.py:273][0m Start Epoch 10 ...
[32m[0721 20:36:40 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:11.9 seconds.
[32m[0721 20:36:40 @saver.py:82][0m Model saved to train_log/mnist-dorefa-1,4,6/model-4680.
[32m[0721 20:36:41 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0721 20:36:41 @monitor.py:476][0m accuracy: 0.10364
[32m[0721 20:36:41 @monitor.py:476][0m cost: 2.309
[32m[0721 20:36:41 @monitor.py:476][0m cross_entropy_loss: 2.309
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28133
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv1/W-rms: 0.06797
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv2/W-rms: 0.058952
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv3/W-rms: 0.058888
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv4/W-rms: 0.0419
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv5/W-rms: 0.0589
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/conv6/W-rms: 0.051421
[32m[0721 20:36:41 @monitor.py:476][0m param-summary/fc1/W-rms: 0.032217
[32m[0721 20:36:41 @monitor.py:476][0m regularize_cost: 2.657e-07
[32m[0721 20:36:41 @monitor.py:476][0m train_error: 0.89636
[32m[0721 20:36:41 @monitor.py:476][0m val_accuracy: 0.11363
[32m[0721 20:36:41 @monitor.py:476][0m val_cross_entropy_loss: 2.3013
[32m[0721 20:36:41 @base.py:287][0m Training has finished!
[32m[0721 20:36:41 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
