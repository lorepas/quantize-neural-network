[32m[0717 09:27:42 @logger.py:92][0m Argv: /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py -f /root/.local/share/jupyter/runtime/kernel-0bafa74d-a1b0-4a24-a86d-448d704ed62f.json
[32m[0717 09:27:42 @fs.py:101][0m [5m[31mWRN[0m Env var $TENSORPACK_DATASET not set, using /root/tensorpack_data for datasets.
[32m[0717 09:27:42 @fs.py:104][0m Created the directory /root/tensorpack_data.
[32m[0717 09:27:42 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-images-idx3-ubyte.gz...
[32m[0717 09:32:11 @fs.py:73][0m Succesfully downloaded train-images-idx3-ubyte.gz. 9912422 bytes.
[32m[0717 09:32:11 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/train-labels-idx1-ubyte.gz...
[32m[0717 09:32:11 @fs.py:73][0m Succesfully downloaded train-labels-idx1-ubyte.gz. 28881 bytes.
[32m[0717 09:32:11 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-images-idx3-ubyte.gz...
[32m[0717 09:32:38 @fs.py:73][0m Succesfully downloaded t10k-images-idx3-ubyte.gz. 1648877 bytes.
[32m[0717 09:32:38 @mnist.py:21][0m Downloading to /root/tensorpack_data/mnist_data/t10k-labels-idx1-ubyte.gz...
[32m[0717 09:32:38 @fs.py:73][0m Succesfully downloaded t10k-labels-idx1-ubyte.gz. 4542 bytes.
[32m[0717 09:32:38 @parallel.py:340][0m [MultiProcessRunnerZMQ] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0717 09:32:38 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0717 09:32:38 @trainers.py:48][0m Building graph for a single training tower ...
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv0/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv0': [?, 40, 40, 1] --> [?, 36, 36, 48]
[32m[0717 09:32:38 @registry.py:90][0m 'pool0': [?, 36, 36, 48] --> [?, 18, 18, 48]
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv1/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv1': [?, 18, 18, 48] --> [?, 18, 18, 64]
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv2/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv2': [?, 18, 18, 64] --> [?, 18, 18, 64]
[32m[0717 09:32:38 @registry.py:90][0m 'pool1': [?, 18, 18, 64] --> [?, 9, 9, 64]
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv3/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv3': [?, 9, 9, 64] --> [?, 7, 7, 128]
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv4/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv4': [?, 7, 7, 128] --> [?, 7, 7, 128]
[32m[0717 09:32:38 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv5/W
[32m[0717 09:32:38 @registry.py:90][0m 'conv5': [?, 7, 7, 128] --> [?, 5, 5, 128]
[32m[0717 09:32:39 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv6/W
[32m[0717 09:32:39 @registry.py:90][0m 'conv6': [?, 5, 5, 128] --> [?, 1, 1, 512]
[32m[0717 09:32:39 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight fc1/W
[32m[0717 09:32:39 @registry.py:90][0m 'fc1': [?, 1, 1, 512] --> [?, 10]
[32m[0717 09:32:39 @regularize.py:97][0m regularize_cost() found 1 variables to regularize.
[32m[0717 09:32:39 @regularize.py:21][0m The following tensors will be regularized: fc1/W:0
[32m[0717 09:32:40 @model_utils.py:67][0m [36mList of Trainable Variables: 
[0mname       shape               #elements
---------  ----------------  -----------
conv0/W    [5, 5, 1, 48]            1200
conv0/b    [48]                       48
conv1/W    [3, 3, 48, 64]          27648
bn1/gamma  [64]                       64
bn1/beta   [64]                       64
conv2/W    [3, 3, 64, 64]          36864
bn2/gamma  [64]                       64
bn2/beta   [64]                       64
conv3/W    [3, 3, 64, 128]         73728
bn3/gamma  [128]                     128
bn3/beta   [128]                     128
conv4/W    [3, 3, 128, 128]       147456
bn4/gamma  [128]                     128
bn4/beta   [128]                     128
conv5/W    [3, 3, 128, 128]       147456
bn5/gamma  [128]                     128
bn5/beta   [128]                     128
conv6/W    [5, 5, 128, 512]      1638400
bn6/gamma  [512]                     512
bn6/beta   [512]                     512
fc1/W      [512, 10]                5120
fc1/b      [10]                       10[36m
Number of trainable variables: 22
Number of parameters (elements): 2079978
Storage space needed for all trainable variables: 7.93MB[0m
[32m[0717 09:32:40 @base.py:207][0m Setup callbacks graph ...
[32m[0717 09:32:40 @argtools.py:138][0m [5m[31mWRN[0m Starting a process with 'fork' method is efficient but not safe and may cause deadlock or crash.Use 'forkserver' or 'spawn' method instead if you run into such issues.See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods on how to set them.
[32m[0717 09:32:40 @argtools.py:138][0m [5m[31mWRN[0m "import prctl" failed! Install python-prctl so that processes can be cleaned with guarantee.
[32m[0717 09:32:40 @inference_runner.py:148][0m [InferenceRunner] Building tower 'InferenceTower' on device /gpu:0 ...
[32m[0717 09:32:40 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv0/W
[32m[0717 09:32:40 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv1/W
[32m[0717 09:32:41 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv2/W
[32m[0717 09:32:41 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv3/W
[32m[0717 09:32:41 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv4/W
[32m[0717 09:32:41 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv5/W
[32m[0717 09:32:42 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight conv6/W
[32m[0717 09:32:42 @<ipython-input-3-d6a6cc99670d>:113][0m Binarizing weight fc1/W
[32m[0717 09:32:42 @summary.py:47][0m [MovingAverageSummary] 5 operations in collection 'MOVING_SUMMARY_OPS' will be run with session hooks.
[32m[0717 09:32:42 @summary.py:94][0m Summarizing collection 'summaries' of size 22.
[32m[0717 09:32:42 @graph.py:99][0m Applying collection UPDATE_OPS of 12 ops.
[32m[0717 09:32:42 @base.py:228][0m Creating the session ...
[32m[0717 09:32:48 @base.py:234][0m Initializing the session ...
[32m[0717 09:32:48 @base.py:241][0m Graph Finalized.
[32m[0717 09:32:48 @concurrency.py:37][0m Starting EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" ...
[32m[0717 09:32:48 @inference_runner.py:95][0m [InferenceRunner] Will eval 79 iterations
[32m[0717 09:32:48 @base.py:273][0m Start Epoch 1 ...
[32m[0717 09:33:36 @base.py:283][0m Epoch 1 (global_step 468) finished, time:47.1 seconds.
[32m[0717 09:33:36 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-468.
[32m[0717 09:33:37 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:33:37 @monitor.py:476][0m accuracy: 0.96716
[32m[0717 09:33:37 @monitor.py:476][0m cost: 0.11812
[32m[0717 09:33:37 @monitor.py:476][0m cross_entropy_loss: 0.11812
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28341
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv1/W-rms: 0.069285
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059712
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv3/W-rms: 0.059685
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv4/W-rms: 0.043093
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04331
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/conv6/W-rms: 0.027674
[32m[0717 09:33:37 @monitor.py:476][0m param-summary/fc1/W-rms: 0.056388
[32m[0717 09:33:37 @monitor.py:476][0m regularize_cost: 8.1642e-07
[32m[0717 09:33:37 @monitor.py:476][0m train_error: 0.032838
[32m[0717 09:33:37 @monitor.py:476][0m val_accuracy: 0.97646
[32m[0717 09:33:37 @monitor.py:476][0m val_cross_entropy_loss: 0.079293
[32m[0717 09:33:37 @base.py:273][0m Start Epoch 2 ...
[32m[0717 09:33:49 @base.py:283][0m Epoch 2 (global_step 936) finished, time:12.4 seconds.
[32m[0717 09:33:49 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-936.
[32m[0717 09:33:50 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:33:50 @monitor.py:476][0m accuracy: 0.97456
[32m[0717 09:33:50 @monitor.py:476][0m cost: 0.08076
[32m[0717 09:33:50 @monitor.py:476][0m cross_entropy_loss: 0.080759
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28425
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv1/W-rms: 0.069911
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv2/W-rms: 0.059957
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv3/W-rms: 0.060001
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv4/W-rms: 0.043552
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv5/W-rms: 0.043928
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/conv6/W-rms: 0.028742
[32m[0717 09:33:50 @monitor.py:476][0m param-summary/fc1/W-rms: 0.055974
[32m[0717 09:33:50 @monitor.py:476][0m regularize_cost: 8.0235e-07
[32m[0717 09:33:50 @monitor.py:476][0m train_error: 0.025439
[32m[0717 09:33:50 @monitor.py:476][0m val_accuracy: 0.97973
[32m[0717 09:33:50 @monitor.py:476][0m val_cross_entropy_loss: 0.062799
[32m[0717 09:33:50 @base.py:273][0m Start Epoch 3 ...
[32m[0717 09:34:03 @base.py:283][0m Epoch 3 (global_step 1404) finished, time:12.6 seconds.
[32m[0717 09:34:03 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-1404.
[32m[0717 09:34:04 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:34:04 @monitor.py:476][0m accuracy: 0.98254
[32m[0717 09:34:04 @monitor.py:476][0m cost: 0.051683
[32m[0717 09:34:04 @monitor.py:476][0m cross_entropy_loss: 0.051683
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28502
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv1/W-rms: 0.070242
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv2/W-rms: 0.060211
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv3/W-rms: 0.06031
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv4/W-rms: 0.043992
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv5/W-rms: 0.044531
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/conv6/W-rms: 0.029684
[32m[0717 09:34:04 @monitor.py:476][0m param-summary/fc1/W-rms: 0.056303
[32m[0717 09:34:04 @monitor.py:476][0m regularize_cost: 8.1131e-07
[32m[0717 09:34:04 @monitor.py:476][0m train_error: 0.017459
[32m[0717 09:34:04 @monitor.py:476][0m val_accuracy: 0.98378
[32m[0717 09:34:04 @monitor.py:476][0m val_cross_entropy_loss: 0.058975
[32m[0717 09:34:04 @base.py:273][0m Start Epoch 4 ...
[32m[0717 09:34:17 @base.py:283][0m Epoch 4 (global_step 1872) finished, time:12.8 seconds.
[32m[0717 09:34:17 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-1872.
[32m[0717 09:34:18 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:34:18 @monitor.py:476][0m accuracy: 0.9829
[32m[0717 09:34:18 @monitor.py:476][0m cost: 0.058885
[32m[0717 09:34:18 @monitor.py:476][0m cross_entropy_loss: 0.058884
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28521
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv1/W-rms: 0.070576
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv2/W-rms: 0.060507
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv3/W-rms: 0.060654
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv4/W-rms: 0.044466
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv5/W-rms: 0.045191
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/conv6/W-rms: 0.030693
[32m[0717 09:34:18 @monitor.py:476][0m param-summary/fc1/W-rms: 0.0569
[32m[0717 09:34:18 @monitor.py:476][0m regularize_cost: 8.2745e-07
[32m[0717 09:34:18 @monitor.py:476][0m train_error: 0.017099
[32m[0717 09:34:18 @monitor.py:476][0m val_accuracy: 0.98744
[32m[0717 09:34:18 @monitor.py:476][0m val_cross_entropy_loss: 0.039096
[32m[0717 09:34:18 @base.py:273][0m Start Epoch 5 ...
[32m[0717 09:34:31 @base.py:283][0m Epoch 5 (global_step 2340) finished, time:13.1 seconds.
[32m[0717 09:34:31 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-2340.
[32m[0717 09:34:32 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:34:32 @monitor.py:476][0m accuracy: 0.98529
[32m[0717 09:34:32 @monitor.py:476][0m cost: 0.043935
[32m[0717 09:34:32 @monitor.py:476][0m cross_entropy_loss: 0.043934
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28592
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv1/W-rms: 0.071067
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv2/W-rms: 0.060901
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv3/W-rms: 0.061117
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv4/W-rms: 0.045081
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv5/W-rms: 0.046017
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/conv6/W-rms: 0.031826
[32m[0717 09:34:32 @monitor.py:476][0m param-summary/fc1/W-rms: 0.058135
[32m[0717 09:34:32 @monitor.py:476][0m regularize_cost: 8.64e-07
[32m[0717 09:34:32 @monitor.py:476][0m train_error: 0.014707
[32m[0717 09:34:32 @monitor.py:476][0m val_accuracy: 0.98418
[32m[0717 09:34:32 @monitor.py:476][0m val_cross_entropy_loss: 0.051688
[32m[0717 09:34:32 @base.py:273][0m Start Epoch 6 ...
[32m[0717 09:34:45 @base.py:283][0m Epoch 6 (global_step 2808) finished, time:12.8 seconds.
[32m[0717 09:34:45 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-2808.
[32m[0717 09:34:46 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:34:46 @monitor.py:476][0m accuracy: 0.98745
[32m[0717 09:34:46 @monitor.py:476][0m cost: 0.039641
[32m[0717 09:34:46 @monitor.py:476][0m cross_entropy_loss: 0.03964
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28644
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv1/W-rms: 0.07176
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv2/W-rms: 0.061279
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv3/W-rms: 0.061627
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv4/W-rms: 0.045745
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv5/W-rms: 0.04693
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/conv6/W-rms: 0.033053
[32m[0717 09:34:46 @monitor.py:476][0m param-summary/fc1/W-rms: 0.059555
[32m[0717 09:34:46 @monitor.py:476][0m regularize_cost: 9.0657e-07
[32m[0717 09:34:46 @monitor.py:476][0m train_error: 0.012547
[32m[0717 09:34:46 @monitor.py:476][0m val_accuracy: 0.9736
[32m[0717 09:34:46 @monitor.py:476][0m val_cross_entropy_loss: 0.091773
[32m[0717 09:34:46 @base.py:273][0m Start Epoch 7 ...
[32m[0717 09:34:59 @base.py:283][0m Epoch 7 (global_step 3276) finished, time:13 seconds.
[32m[0717 09:34:59 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-3276.
[32m[0717 09:35:00 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:35:00 @monitor.py:476][0m accuracy: 0.99122
[32m[0717 09:35:00 @monitor.py:476][0m cost: 0.027847
[32m[0717 09:35:00 @monitor.py:476][0m cross_entropy_loss: 0.027846
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28683
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv1/W-rms: 0.072184
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv2/W-rms: 0.061691
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv3/W-rms: 0.06215
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv4/W-rms: 0.046401
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv5/W-rms: 0.047834
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/conv6/W-rms: 0.034215
[32m[0717 09:35:00 @monitor.py:476][0m param-summary/fc1/W-rms: 0.060994
[32m[0717 09:35:00 @monitor.py:476][0m regularize_cost: 9.5044e-07
[32m[0717 09:35:00 @monitor.py:476][0m train_error: 0.0087801
[32m[0717 09:35:00 @monitor.py:476][0m val_accuracy: 0.9914
[32m[0717 09:35:00 @monitor.py:476][0m val_cross_entropy_loss: 0.030487
[32m[0717 09:35:00 @base.py:273][0m Start Epoch 8 ...
[32m[0717 09:35:13 @base.py:283][0m Epoch 8 (global_step 3744) finished, time:13.2 seconds.
[32m[0717 09:35:13 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-3744.
[32m[0717 09:35:14 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:35:14 @monitor.py:476][0m accuracy: 0.99022
[32m[0717 09:35:14 @monitor.py:476][0m cost: 0.032069
[32m[0717 09:35:14 @monitor.py:476][0m cross_entropy_loss: 0.032068
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28719
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv1/W-rms: 0.072752
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv2/W-rms: 0.06222
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv3/W-rms: 0.06285
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv4/W-rms: 0.047267
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv5/W-rms: 0.049003
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/conv6/W-rms: 0.035649
[32m[0717 09:35:14 @monitor.py:476][0m param-summary/fc1/W-rms: 0.062702
[32m[0717 09:35:14 @monitor.py:476][0m regularize_cost: 1.0052e-06
[32m[0717 09:35:14 @monitor.py:476][0m train_error: 0.0097846
[32m[0717 09:35:14 @monitor.py:476][0m val_accuracy: 0.98892
[32m[0717 09:35:14 @monitor.py:476][0m val_cross_entropy_loss: 0.034267
[32m[0717 09:35:14 @base.py:273][0m Start Epoch 9 ...
[32m[0717 09:35:28 @base.py:283][0m Epoch 9 (global_step 4212) finished, time:13.4 seconds.
[32m[0717 09:35:28 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-4212.
[32m[0717 09:35:29 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:35:29 @monitor.py:476][0m accuracy: 0.99281
[32m[0717 09:35:29 @monitor.py:476][0m cost: 0.026634
[32m[0717 09:35:29 @monitor.py:476][0m cross_entropy_loss: 0.026633
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv0/W-rms: 0.2878
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv1/W-rms: 0.073416
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv2/W-rms: 0.062812
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv3/W-rms: 0.063652
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv4/W-rms: 0.048235
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv5/W-rms: 0.050258
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/conv6/W-rms: 0.037177
[32m[0717 09:35:29 @monitor.py:476][0m param-summary/fc1/W-rms: 0.064549
[32m[0717 09:35:29 @monitor.py:476][0m regularize_cost: 1.0646e-06
[32m[0717 09:35:29 @monitor.py:476][0m train_error: 0.0071947
[32m[0717 09:35:29 @monitor.py:476][0m val_accuracy: 0.98883
[32m[0717 09:35:29 @monitor.py:476][0m val_cross_entropy_loss: 0.037124
[32m[0717 09:35:29 @base.py:273][0m Start Epoch 10 ...
[32m[0717 09:35:42 @base.py:283][0m Epoch 10 (global_step 4680) finished, time:13 seconds.
[32m[0717 09:35:42 @saver.py:82][0m Model saved to train_log/mnist-dorefa-4,6,16/model-4680.
[32m[0717 09:35:43 @monitor.py:476][0m QueueInput/queue_size: 50
[32m[0717 09:35:43 @monitor.py:476][0m accuracy: 0.99337
[32m[0717 09:35:43 @monitor.py:476][0m cost: 0.018946
[32m[0717 09:35:43 @monitor.py:476][0m cross_entropy_loss: 0.018945
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv0/W-rms: 0.28849
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv1/W-rms: 0.074297
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv2/W-rms: 0.063608
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv3/W-rms: 0.064658
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv4/W-rms: 0.049382
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv5/W-rms: 0.051706
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/conv6/W-rms: 0.038883
[32m[0717 09:35:43 @monitor.py:476][0m param-summary/fc1/W-rms: 0.066926
[32m[0717 09:35:43 @monitor.py:476][0m regularize_cost: 1.1413e-06
[32m[0717 09:35:43 @monitor.py:476][0m train_error: 0.006633
[32m[0717 09:35:43 @monitor.py:476][0m val_accuracy: 0.9911
[32m[0717 09:35:43 @monitor.py:476][0m val_cross_entropy_loss: 0.029845
[32m[0717 09:35:43 @base.py:287][0m Training has finished!
[32m[0717 09:35:43 @input_source.py:177][0m [EnqueueThread] Thread EnqueueThread: enqueue dataflow to TF queue "QueueInput/input_queue" Exited.
